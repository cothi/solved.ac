fn max(a: i32, b: i32) -> i32 {
    if a > b {
        return a;
    }

    b
}

fn down_top(v: Vec<i32>, n: usize) -> i32 {
    let mut ret: i32 = 1;
    let mut res_v = vec![1; n+1];

    for i in 0..n {
        for j in 0..i {
            if v[i] > v[j] {
                // println!("{} {}", v[i], v[j]);
                res_v[i] = max(res_v[j] + 1, res_v[i]);
            }
        }
        // println!("{}", v[i]);
        ret = max(ret, res_v[i]);
    }
    ret
}

fn main() {
    let mut n = String::new();
    std::io::stdin().read_line(&mut n).unwrap();
    let n_usize: usize = n.trim().parse().unwrap();

    let mut line_string = String::new();
    std::io::stdin().read_line(&mut line_string).unwrap();
    let v: Vec<i32> = line_string
        .split(' ')
        .map(|x| x.trim().parse().unwrap())
        .collect();

    let result = down_top(v, n_usize);
    println!("{}", result);
}
