fn max(a: u32, b: u32) -> u32 {
    if a > b {
        return a;
    }

    b
}

fn down_top(v: Vec<u32>, u: usize) -> u32 {
    let mut res: Vec<u32> = vec![0; 300];

    res[0] = v[0];
    res[1] = v[1] + v[0];
    res[2] = max(v[0] + v[2], v[1] + v[2]);

    for i in 3..u {
        res[i] = max(res[i - 3] + v[i - 1] + v[i], res[i - 2] + v[i]);
        // println!("{}", res[i]);
    }
    res[u - 1]
}

fn main() {
    let mut n_input = String::new();
    std::io::stdin().read_line(&mut n_input).unwrap();
    let n: usize = n_input.trim().parse().unwrap();
    let mut v = vec![0; 300 + 1];
    for i in 0..n {
        let mut tmp = String::new();
        std::io::stdin().read_line(&mut tmp).unwrap();
        let v_input: u32 = tmp.trim().parse().unwrap();
        // println!("{}", v_input);
        v[i] = v_input;
    }
    let res = down_top(v, n);
    println!("{}", res);
}